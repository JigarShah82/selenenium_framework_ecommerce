{"name": "test_login_invalid_user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Cannot verify element contains expected text", "trace": "self = <python_sel_frameworkproject.src.SeleniumExtended.SeleniumExtended object at 0x000001FB10F7A6B0>, locator = ('css selector', 'ul.woocommerce-error')\ntext = 'Unknown email address. Check again or try your username!.', timeout = 10\n\n    def wait_verify_element_contains_text(self, locator, text, timeout=None):\n        timeout = timeout if timeout else self.default_timeout\n        try:\n>           WebDriverWait(self.driver, timeout).until(\n                EC.text_to_be_present_in_element(locator, text)\n            )\n\npython_sel_frameworkproject\\src\\SeleniumExtended.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"254e9d02f816e62f9052b77d0fef5789\")>\nmethod = <function text_to_be_present_in_element.<locals>._predicate at 0x000001FB10F8A830>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\npython_sel_frameworkproject_venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:90: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_login_negative.TestLoginNegative object at 0x000001FB10EA9930>\n\n    @pytest.mark.tcid12\n    def test_login_invalid_user(self):\n        my_account = MyAccountSignedOut(self.driver)\n        # goto my account\n        my_account.go_to_my_account()\n    \n        # type username and password and click login\n        my_account.input_login_username(\"alsjfa@abc.com\")\n        my_account.input_login_password(\"lasjdf\")\n        my_account.click_login_button()\n        # verify error message\n        expected_err = \"Unknown email address. Check again or try your username!.\"\n>       my_account.verify_error_message(expected_err)\n\npython_sel_frameworkproject\\tests\\my_account\\test_login_negative.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npython_sel_frameworkproject\\src\\pages\\MyAccountSignedOut.py:29: in verify_error_message\n    self.sl.wait_verify_element_contains_text(self.ERRORS, exp_err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <python_sel_frameworkproject.src.SeleniumExtended.SeleniumExtended object at 0x000001FB10F7A6B0>, locator = ('css selector', 'ul.woocommerce-error')\ntext = 'Unknown email address. Check again or try your username!.', timeout = 10\n\n    def wait_verify_element_contains_text(self, locator, text, timeout=None):\n        timeout = timeout if timeout else self.default_timeout\n        try:\n            WebDriverWait(self.driver, timeout).until(\n                EC.text_to_be_present_in_element(locator, text)\n            )\n        except TimeoutException:\n>           raise TimeoutException(\"Cannot verify element contains expected text\")\nE           selenium.common.exceptions.TimeoutException: Message: Cannot verify element contains expected text\n\npython_sel_frameworkproject\\src\\SeleniumExtended.py:44: TimeoutException"}, "attachments": [{"name": "screeshot", "source": "30f8010e-6335-4bb2-8582-7b48fd56a0d4-attachment.png", "type": "image/png"}], "start": 1664365470305, "stop": 1664365483957, "uuid": "0bfae499-0c7e-4888-a58b-db4e2f695e2a", "historyId": "fb7e11fc7d5de567861afae4bfe412b4", "testCaseId": "c9c67b8a5b7583a5e610d5f68b59ff4c", "fullName": "python_sel_frameworkproject.tests.my_account.test_login_negative.TestLoginNegative#test_login_invalid_user", "labels": [{"name": "tag", "value": "tcid12"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "python_sel_frameworkproject.tests.my_account"}, {"name": "suite", "value": "test_login_negative"}, {"name": "subSuite", "value": "TestLoginNegative"}, {"name": "host", "value": "DESKTOP-GG4DDGM"}, {"name": "thread", "value": "14424-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "python_sel_frameworkproject.tests.my_account.test_login_negative"}]}